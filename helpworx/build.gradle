plugins {
    id 'org.springframework.boot' version '2.2.5.RELEASE'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
    id "com.moowork.node" version "1.3.1"
    id 'java'
}

node {
    version = '12.16.2'
    npmVersion = '6.14.4'
    workDir = file("./src/frontend")
    npmWorkDir = file("./src/frontend")
    nodeModulesDir = file("./src/frontend")
}


group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}
ext {
    mapstructVersion = "1.3.0.Final"
    lombokVersion = "1.18.6"
}


dependencies {
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.12.3'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.12.3'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.12.3'
    implementation group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'

    implementation 'com.querydsl:querydsl-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation "org.mapstruct:mapstruct:1.4.2.Final"
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-websocket', version: '2.4.5'
    annotationProcessor "org.mapstruct:mapstruct-processor:1.4.2.Final"
    compileOnly 'org.projectlombok:lombok'
    implementation group: 'org.springframework.boot', name: 'spring-boot-devtools', version: '2.2.5.RELEASE'
    annotationProcessor 'org.projectlombok:lombok'
    runtimeOnly 'org.postgresql:postgresql'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.9.2'
    compile group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.9.2'
    compile group: 'io.swagger', name: 'swagger-annotations', version: '1.5.21'
    compile group: 'io.swagger', name: 'swagger-models', version: '1.5.21'
    compile group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.2'
    runtime group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.2'
    runtime group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.2'
}
def querydslDir = "$buildDir/generated/querydsl"

querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}

sourceSets {
    main.java.srcDir querydslDir
}

configurations {
    querydsl.extendsFrom compileClasspath
}

jar{
    manifest{
        attributes ('Title' : 'Helpworx', 'Version': '0.0.1-SNAPSHOT' , 'Main-Class': 'com.example.helpworx.HelpworxApplication')


    }
    archiveName 'Helpworx.jar'
    dependsOn configurations.runtime
    from {
        (configurations.runtime).collect {it.isDirectory() ? it : zipTree(it) }}

}

compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}



task setUp(type: NpmTask){
    description = "Install Node.js packages"
    args = ['install']
    inputs.files file('package.json')
    outputs.files file('node_monules')
}

task buildFrontEnd(type: NpmTask, dependsOn: setUp) {
    description = "Build vue.js"
    args = ['run', 'build']
}

processResources.dependsOn 'buildFrontEnd'


test {
    useJUnitPlatform()
}
